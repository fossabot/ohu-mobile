
@mixin mobile-btn-init {
  user-select: none;
  white-space: nowrap;
  cursor: pointer;
  border: none;
  -webkit-appearance: none;
  -webkit-tap-highlight-color: transparent;
  // for mobile outline is useless
  outline: none;
  transition: all .3s;
  overflow: visible;
  font-family: $font-family;
}

$btn-base-cls: #{$prefix}btn;

.#{$btn-base-cls} {
  height: $btn-size-normal;
  @include mobile-btn-init;
  @include padding(_ 56px _ 56px);
  color: $color-text-base;
  font-size: 32px;
  line-height: 1.375em;
  border-radius: 3Px;
  font-weight: 400;
  background: $color-text-base-inverse;
  @include hair-border($color-border-base, all, 6Px);
  .#{$prefix}icon {
    pointer-events: none;
    + span {
      margin-left: 16px;
    }
  }
  &.is-block {
    width: 100%;
    display: block;
  }
  &.is-inline {
    display: inline-block;
  }
  // ============== round ===============
  &.is-round {
    border-radius: $btn-size-normal;
    &::after {
      border-radius: $btn-size-normal;
    }
  }
  // ============== type ===============
  &.is-primary {
    background: $color-primary;
    color: $color-text-base-inverse;
    &:active {
      background: $button-color-primary-active;
      &::after {
        border-color: $button-color-primary-active;
      }
    }
    &::after {
      border-color: $color-primary;
    }
  }
  &.is-translucent {
    background: rgba($color-primary, .15);
    color: $color-primary;
    &:active {
      color: $button-color-translucent-active;
      background: $button-color-translucent-bg-active;
      &::after {
        border-color: $button-color-translucent-bg-active;
      }
    }
    &::after {
      border-color: rgba($color-primary, .15);
    }
  }
  &.is-link {
    background: transparent;
    color: $color-primary;
    &:active {
      color: $button-color-primary-active;
    }
    &::after {
      border: none;
    }
  }
  // ============== plain ===============
  &.is-plain {
    &.is-primary {
      background: transparent;
      color: $color-primary;
      &:active {
        background: transparent;
        color: $button-color-primary-plain-active;
        &::after {
          border-color: $button-color-primary-plain-active;
        }
      }
    }
    // the plain style's disabled state is different
    &[disabled] {
      color: $color-text-base;
      &::after {
        border-color: $button-color-plain-disabled;
      }
    }
  }
  // ============== size ===============
  &.is-sm {
    height: $btn-size-sm;
    line-height: $btn-size-sm;
    font-size: 28px;
    @include padding(_ 16px _ 16px);
    &.is-round {
      border-radius: $btn-size-sm;
      @include padding(_ 24px _ 24px);
      &::after {
        border-radius: $btn-size-sm;
      }
    }
  }
  &.is-md {
    height: $btn-size-md;
    line-height: $btn-size-md;
    font-size: 36px;
    @include padding(_ 36px _ 36px);
    &.is-round {
      border-radius: $btn-size-md;
      &::after {
        border-radius: $btn-size-md;
      }
    }
  }
  &.is-icon-only {
    &.is-sm {
      padding: 0;
      width: $btn-size-sm;
    }
    &.is-md {
      padding: 0;
      width: $btn-size-md;
    }
  }

  // ============== state ===============
  &:active {
    background: $button-color-default-active;
  }
  &.is-loading {
    opacity: .5;
    // translucent type for disabled is special
    &.is-translucent {
      background: $button-color-translucent-disabled;
      color: $color-text-base-inverse;
      opacity: 1;
      &::after {
        border-color: $button-color-translucent-disabled;
      }
    }
  }
  &[disabled] {
    cursor: not-allowed;
    opacity: .5;
    // translucent type for disabled is special
    &.is-translucent {
      background: $button-color-translucent-disabled;
      color: $color-text-base-inverse;
      opacity: 1;
      &::after {
        border-color: $button-color-translucent-disabled;
      }
    }
  }
}
