// useful characters
// space
$space: "\0020";
// non-breaking space
$nbsp: "\00a0";

// quotation mark
$quot: "\0022";
// left single curly quote
$lsquo: "\2018";
// right single curly quote
$rsquo: "\2019";
// left double curly quote
$ldquo: "\201C";
// right double curly quote
$rdquo: "\201D";
// left single angle quote (guillemet)
$lsaquo: "\2039";
// right single angle quote (guillemet)
$rsaquo: "\203A";
// left double angle quote (guillemet)
$laquo: "\00ab";
// right double angle quote (guillemet)
$raquo: "\00bb";

// em dash (mutton)
$mdash: "\2014";
// en dash (nut)
$ndash: "\2013";
// hyphen
$hyphen: "\2010";

// ampersand
$amp: "\0026";
// greater than
$gt: "\003e";
// less than
$lt: "\003c";
// times
$times: "\00D7";
// big times
$bigtimes: "\2715";
// checkmark
$checkmark: "\2713";

// section sign (double S, hurricane, sectional symbol, the legal doughnut, signum sectionis)
$sect: "\00a7";
// paragraph symbol (pilcrow)
$para: "\00b6";

// middot (interpunct, interpoint)
$middot: "\00b7";
// o-slash (slashed o)
$oslash: "\00f8";
// bullet
$bull: "\2022";
// white bullet
$whibull: "\25E6";
// horizontal ellipsis
$hellip: "\2026";
// vertical ellipsis
$vellip: "\22EE";
// midline horizontal ellipsis
$midhellip: "\22EF";

// up-pointing triangle
$utri: "\25b2";
// down-pointing triangle
$dtri: "\25bc";
// left-pointing triangle
$ltri: "\25c0";
// right-pointing triangle
$rtri: "\25b6";
// up-pointing small triangle
$ustri: "\25b4";
// down-pointing small triangle
$dstri: "\25be";
// left-pointing small triangle
$lstri: "\25c2";
// right-pointing small triangle
$rstri: "\25b8";
// diamond
$diamond: "\25c6";
// fisheye
$fisheye: "\25c9";
// bullseye
$bullseye: "\25ce";
// circle
$circle: "\25cf";
// white circle
$whitecircle: "\25cb";
// square
$square: "\25a0";
// white square
$whitesquare: "\25a1";
// small square
$ssquare: "\25aa";
// small white square
$swhitesquare: "\25ab";

// general currency
$currency: "\00a4";
// cent
$cent: "\00a2";
// dollar
$dollar: "\0024";
// pound
$pound: "\00a3";
// euro
$euro: "\20ac";
// yen
$yen: "\00a5";
// rupee
$rupee: "\20B9";

/// @group ellipsis
@mixin ellipsis($line: 1) {
  overflow: hidden;
  text-overflow: ellipsis;
  @if $line == 1 {
    white-space: nowrap;
  }
  @if $line > 1 {
    display: -webkit-box;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
  }
}

@function main-src($formats, $file-path, $font-family) {
  // Return the list of `src` values, in order, that
  // a good `@font-face` will need, including only
  // those formats specified in the list `$formats`.
  $result: ();
  @if index($formats, eot) {
    $eot-val: url("#{$file-path}.eot?#iefix") format("embedded-opentype");
    $result: append($result, $eot-val, comma);
  }
  @if index($formats, woff2) {
    $woff2-val: url("#{$file-path}.woff2") format("woff2");
    $result: append($result, $woff2-val, comma);
  }
  @if index($formats, woff) {
    $woff-val: url("#{$file-path}.woff") format("woff");
    $result: append($result, $woff-val, comma);
  }
  @if index($formats, ttf) {
    $ttf-val: url("#{$file-path}.ttf") format("truetype");
    $result: append($result, $ttf-val, comma);
  }
  @if index($formats, svg) {
    $svg-val: url("#{$file-path}.svg##{$font-family}") format("svg");
    $result: append($result, $svg-val, comma);
  }
  @return $result;
}

/// @group font-face
/// font-face https://github.com/davidtheclark/scut/blob/v1.4.0/src/typography/_font-face.scss
@mixin font-face (
  $font-family,
  $file-path,
  $weight: normal,
  $style: normal,
  $formats: eot woff2 woff ttf svg
) {

  @if index("italic" "oblique", $weight) {
    $style: $weight;
    $weight: normal;
  }

  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;

    @if index($formats, eot) {
      src: url("#{$file-path}.eot");
    }
    src: main-src($formats, $file-path, $font-family);
  }

}

// overflow-wrap

@mixin text-wrap {
  word-wrap: break-word;
  white-space: pre-wrap;
  word-break: break-word;
}
